[{"C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\index.js":"1","C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\App.js":"2","C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\reducer.js":"3","C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\TodoInput.js":"4","C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\TodoList.js":"5"},{"size":390,"mtime":1607777826000,"results":"6","hashOfConfig":"7"},{"size":283,"mtime":1607777826000,"results":"8","hashOfConfig":"7"},{"size":766,"mtime":1607777826000,"results":"9","hashOfConfig":"7"},{"size":1339,"mtime":1607777826000,"results":"10","hashOfConfig":"7"},{"size":1234,"mtime":1607777826000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1wqu31u",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\index.js",[],["24","25"],"C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\App.js",[],"C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\reducer.js",[],"C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\TodoInput.js",[],"C:\\Users\\navfa\\Desktop\\Quora\\react-todo-app\\src\\TodoList.js",["26","27"],"import React, { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { ListGroup, Button } from \"react-bootstrap\";\r\n\r\nexport default function TodoList() {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector(state => state.todos);\r\n\r\n  const handleDelete = id =>\r\n    dispatch({\r\n      type: \"DELETE_TODO\",\r\n      payload: id\r\n    });\r\n\r\n  const handleEdit = id => {\r\n    const label = prompt(\"Edit todo: \");\r\n    return dispatch({\r\n      type: \"EDIT_TODO\",\r\n      payload: {\r\n        id,\r\n        label\r\n      }\r\n    });\r\n  };\r\n\r\n  if (!todos || todos.length === 0) return \"\";\r\n\r\n  return (\r\n    <ul class=\"list-group\">\r\n      {todos.map(todo => (\r\n        <>\r\n          <li class=\"list-group-item todo__item\">\r\n            {todo?.label}\r\n\r\n            <div>\r\n              <Button variant=\"warning\" onClick={() => handleEdit(todo.id)}>\r\n                <i class=\"fas fa-pen\" />\r\n              </Button>\r\n              {\"  \"}\r\n              <Button variant=\"danger\" onClick={() => handleDelete(todo.id)}>\r\n                <i class=\"far fa-trash-alt\" />\r\n              </Button>\r\n            </div>\r\n          </li>\r\n        </>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":17,"nodeType":"34","messageId":"35","endLine":1,"endColumn":25},{"ruleId":"32","severity":1,"message":"36","line":5,"column":10,"nodeType":"34","messageId":"35","endLine":5,"endColumn":19},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ListGroup' is defined but never used.","no-global-assign","no-unsafe-negation"]